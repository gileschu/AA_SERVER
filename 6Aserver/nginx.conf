worker_processes  4;
#worker_cpu_affinity 0001 0010 0100 1000;
error_log /var/log/resty/error.log info;
events {
    worker_connections 5000;
}
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log off;
    #access_log  /var/log/resty/access.log  main;
    keepalive_timeout 5;

    upstream game_backend {
        drizzle_server 192.168.2.14:3306 protocol=mysql
                       dbname=gm_data user=dev password=123 charset=utf8;
        drizzle_keepalive max=200 overflow=ignore mode=single;
    }
    upstream chinau_6a_s_backend {
        drizzle_server 192.168.2.14:3306 protocol=mysql
                       dbname=chinau_6a user=dev password=123 charset=utf8;
        drizzle_keepalive max=200 overflow=ignore mode=single;
    }
    upstream chinau_6a_iud_backend {
        drizzle_server 192.168.2.14:3306 protocol=mysql
                       dbname=chinau_6a user=dev password=123 charset=utf8;
        drizzle_keepalive max=200 overflow=ignore mode=single;
    }

    upstream chinau_news_s_backend {
        drizzle_server 192.168.2.14:3306 protocol=mysql
                       dbname=gamedb user=dev password=123 charset=utf8;
        drizzle_keepalive max=200 overflow=ignore mode=single;
    }
    upstream chinau_news_iud_backend {
        drizzle_server 192.168.2.14:3306 protocol=mysql
                       dbname=gamedb user=dev password=123 charset=utf8;
        drizzle_keepalive max=200 overflow=ignore mode=single;
    }
   upstream my_redis_node
   {
      server 192.168.1.62:6379;
      keepalive 1024 ;
   }
    lua_package_path "/opt/openresty/work/conf/?.lua;;";
    lua_shared_dict config 1m;
    lua_shared_dict game_updatesign_cache 5m;
    lua_shared_dict level_config_cache 1m;
    lua_shared_dict cv_cache 1m;
    lua_shared_dict icon_cache 1m;
    lua_shared_dict token_cache 128m;
    lua_shared_dict userfavor_upsign_cache 128m;
    lua_shared_dict gamedata_upsign_cache 128m;
    lua_shared_dict user_wealth_cache 128m;

    lua_shared_dict timer_locks 100k;
    init_worker_by_lua_file /opt/openresty/work/conf/init_timer.lua;
    server {
        listen 80;
        #lua缓存
        lua_code_cache on;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        root html;
        }

        location @select_get {
           set_unescape_uri  $sql $query_string;
           # echo $sql;
           drizzle_query $sql;
           rds_json on;
           drizzle_pass chinau_6a_s_backend;
        }

        location @select_chinau_6a {
           #set_unescape_uri  $sql $query_string;
           # echo $sql;
           drizzle_query $sql;
           rds_json on;
           drizzle_pass chinau_6a_s_backend;
        }

        location @uid {
            #echo $sql;
           # set_unescape_uri  $sql $query_string;
            drizzle_query $sql;
            rds_json on;
            drizzle_pass chinau_6a_iud_backend;
        }

        location = /mysql/mysql_chinau_6a {
            #必须初始化ngx变量，否则为nil
            set $sql '';
            #access_by_lua_file 报找不到/mysql/mysql_chinau_6a
            content_by_lua_file /opt/openresty/work/conf/mysql/mysql_chinau_6a.lua;
        }

        location @select_gamedb {
           #set_unescape_uri  $sql $query_string;
           # echo $sql;
           drizzle_query $sql;
           rds_json on;
           drizzle_pass chinau_news_s_backend;
        }

        location @uid_news {
            #echo $sql;
           # set_unescape_uri  $sql $query_string;
            drizzle_query $sql;
            rds_json on;
            drizzle_pass chinau_news_iud_backend;
        }

        location = /mysql/mysql_chinau_news {
            #必须初始化ngx变量，否则为nil
            set $sql '';
            #access_by_lua_file 报找不到/mysql/mysql_chinau_6a
            content_by_lua_file /opt/openresty/work/conf/mysql/mysql_chinau_news.lua;
        }
        location = /mysql {
            #必须初始化ngx变量，否则为nil
            set $sql '';
            #access_by_lua_file 报找不到/mysql/mysql_chinau_6a
            content_by_lua_file /opt/openresty/work/conf/mysql/mysql.lua;
        }

        location = /mysql_chinau_6a {
            #lua_need_request_body on;
            #set $sql 21;
            #必须初始化ngx变量，否则为nil
            set $sql '';
            access_by_lua '
               ngx.req.read_body()  -- explicitly read the req body
               local data = ngx.req.get_body_data()
               ngx.log(ngx.ERR, "body:", data)
                ngx.var.sql = data
                if string.find(data, "select ") then
                    return ngx.exec("@select")
                end
                if string.find(data, "update ") ~= nil or string.find(data, "insert ") ~= nil or string.find(data, "delete ") ~= nil then
                    #local res = ngx.location.capture("/mysql/queue_sql?",
                    #    { method = ngx.HTTP_POST, body = data }
                    #)
                    #return
                    return ngx.exec("@uid")
                end
            ';

            rds_json_ret 400 "not expecting statement";
        }

        location = /mysql_chinau_6_get {
            set_unescape_uri  $sql $query_string;
            access_by_lua '
                local qs = ngx.var.sql
                ngx.log(ngx.ERR,"qs:", qs)
                if string.find(qs, "select ") then
                    return ngx.exec("@select")
                end

                if string.find(qs, "update ") ~= nil or string.find(qs, "insert ") ~= nil or string.find(qs, "delete ") ~= nil then
                    return ngx.exec("@uid")
                end
            ';

            rds_json_ret 400 "not expecting statement";
        }
        location = /mysql_chinau_6a2
        {
            #set $sql "select * from chinau_member";
            set $flag 0;
            if ($query_string ~* "select%20")
            {
             set $flag 1;
             drizzle_pass chinau_6a_s_backend;
            }
            if ($query_string ~* "update%20|delete%20|insert%20")
            {
              set $flag 1;
              drizzle_pass chinau_6a_iud_backend;
            }
            if ($flag = 0)
            {
              echo "no privilege";
              return 403;
            }
            set_unescape_uri  $sql $query_string;
            drizzle_query $sql;
            rds_json on;
        }
        location = /mysql_iud_chinau_6a
        {
          content_by_lua_file /opt/openresty/work/conf/mysql/queue_sql.lua;
        }

        location /mysql-pool-status {
            #allow 127.0.0.1;
            #deny all;

            drizzle_status;
        }

        location = /queue {
            redis2_query lpush "chinau_6a" "update chinau_member set line_time = line_time+1 where id=100";
            redis2_pass my_redis_node;
        }
        #POST set%20uid%201%0D%0A
        location = /redis_post {
            internal;
           # echo $echo_request_body;
            # $echo_request_body is provided by the ngx_echo module
            redis2_raw_query $echo_request_body;

            redis2_pass my_redis_node;
        }

        location = /redis {
            content_by_lua_file /opt/openresty/work/conf/test.lua;
        }

        location = /redis_multi_post {
            internal;
            redis2_raw_queries $args $echo_request_body;
            redis2_pass my_redis_node;
        }

        location = /redis_multi {
            content_by_lua_file /opt/openresty/work/conf/test2.lua;
        }

      #GET /redis?set%20uid%201%0D%0A
      location = /redis_get {
           set_unescape_uri $query $query_string; # this requires the ngx_set_misc module
           echo $query;
          redis2_raw_query $query;
          redis2_pass my_redis_node;
       }

       #GET /redis_multi?n=2&cmds=flushall%0D%0Aget%20key%0D%0A
       location = /redis_multi_get {
           set_unescape_uri $n $arg_n;
           set_unescape_uri $cmds $arg_cmds;

           redis2_raw_queries $n $cmds;

           redis2_pass my_redis_node;
       }
       #GET /redis_literal?*1%0D%0A$4%0D%0Aping%0D%0A
       location = /redis_literal {
           # $ is not special here...
           set_unescape_uri $query $query_string;
           redis2_literal_raw_query $query;
           redis2_pass my_redis_node;
       }

        location = /guinfo {
         # access_by_lua_file /opt/openresty/work/conf/access.lua;
          content_by_lua_file /opt/openresty/work/conf/guser.lua;
        }

        location = /puinfo {
          access_by_lua_file /opt/openresty/work/conf/access.lua;
          content_by_lua_file /opt/openresty/work/conf/user.lua;

        }

     #  location = /dstatus{
     #       set_quote_sql_str $id $arg_userid;
     #       drizzle_query 'select * from data_status where userid=$id';
     #       drizzle_pass backend;
     #       rds_json on;
     #   }
     #  location = /userctrlmode{
     #      set_quote_sql_str $id $arg_userid;
     #      drizzle_query 'select man_auto from user_ctrlmode where userid=$id';
     #      drizzle_pass backend;
     #      rds_json on;
     #  }

        location = /progtogame{
            #proxy_set_header   referer   "http://192.168.1.62";
            access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/progtogame.lua;
         }


        location = /usergameinfo{
        #access_by_lua_file /opt/openresty/work/conf/access.lua;
        content_by_lua_file /opt/openresty/work/conf/usergameinfo.lua;
        }

        location = /hb{
        access_by_lua_file /opt/openresty/work/conf/access.lua;
        content_by_lua_file /opt/openresty/work/conf/heartbeat.lua;
        }

       location = /getprogmd5{
           set_quote_sql_str $id $arg_gameid;
           drizzle_query 'select progmd5,gameid from prog_to_game where gameid=$id';
           drizzle_pass game_backend;
           rds_json on;

         }

        location = /account {
            lua_need_request_body on;
            content_by_lua_file /opt/openresty/work/conf/account.lua;
        }

        location = /online {
            content_by_lua_file /opt/openresty/work/conf/online.lua;
        }
        location = /sns/like {
            proxy_set_header   Content-Type   "application/x-www-form-urlencoded";
            content_by_lua_file /opt/openresty/work/conf/sns/like.lua;
        }

        location = /task/score {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/task/score.lua;
        }
        location = /task/level {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/task/level.lua;
        }
        location = /mysql/queue_sql {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/mysql/queue_sql.lua;
        }
        location = /uploadfile {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/report_file.lua;
        }
        location = /gamepic {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/gamepic.lua;
        }

        location = /levelconf {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/levelconf.lua;
        }
        location = /refresh_gamepic {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/refresh_gamepic.lua;
        }
        location = /conf_data {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/conf_data.lua;
        }
        location = /userfavor {
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/userfavor.lua;
        }
        location = /userwealth{
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/task/userwealth.lua;
        }
        location = /updatescore{
            #access_by_lua_file /opt/openresty/work/conf/access.lua;
            content_by_lua_file /opt/openresty/work/conf/task/updatescore.lua;
        }
        location = /api {
            access_by_lua '
                local tokentool = require "tokentool"
                local args = ngx.req.get_uri_args(10)
                if args.token == nil then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end
                local ret = tokentool.has_token(args.token)
                if ret == ngx.null then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                elseif ret == false then
                    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
                end
            ';

            content_by_lua '
                ngx.say("token ok")
            ';
        }
    }
}
